// Who needs OpenAPI when you have TypeScript?

import { open } from 'fs/promises'

import { createSelectSchema } from 'drizzle-typebox';
import { ModelToTypeScript } from '@sinclair/typebox-codegen'

import { agency } from './src/models/db/schema/agency';
import { calendarDates } from './src/models/db/schema/calendar-dates';
import { feedInfo } from './src/models/db/schema/feed-info';
import { pathways } from './src/models/db/schema/pathways';
import { routes } from './src/models/db/schema/routes';
import { shapes } from './src/models/db/schema/shapes';
import { stopTimes } from './src/models/db/schema/stop-times';
import { stops } from './src/models/db/schema/stops';
import { trips } from './src/models/db/schema/trips';

// import * as others from './src/models/db/schema/others';

const exports = {
    Agency: agency,
    CalendarDate: calendarDates,
    FeedInfo: feedInfo,
    Pathway: pathways,
    Route: routes,
    Shape: shapes,
    StopTime: stopTimes,
    Stop: stops,
    Trip: trips,
    // ...others
}

const file = await open('gtfs.d.ts', 'w');
await file.write('// Autogenerated by generate-types.ts\n');

for (const [name, table] of Object.entries(exports)) {
    console.log(name);
    const schema = createSelectSchema(table);
    await file.write(ModelToTypeScript.GenerateType({ types: [ schema ] }, schema.$id!).replace('export type undefined', '\nexport type ' + name));
}

file.close();
